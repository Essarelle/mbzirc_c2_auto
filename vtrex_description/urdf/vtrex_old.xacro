<?xml version="1.0"?>
<robot name="vtrex" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:arg name="laser_enabled" default="true" />
  <xacro:property name="PI" value="3.1415926535897931" />

  <xacro:property name="wheelbase" value="0.7" />
  <xacro:property name="track" value="0.64" />
  <xacro:property name="wheel_vertical_offset" value="0.1651" />
  <xacro:property name="footprint_vertical_offset" value=".24866" />

  <xacro:property name="wheel_cover_y_spacing" value="0.291" />
  <xacro:property name="wheel_cover_z_spacing" value="0.344" />

  <xacro:property name="wheel_radius" value="0.1651" />
  <xacro:property name="wheel_width" value="0.127" />

  <xacro:property name="chassis_length" value="0.95" />
  <xacro:property name="chassis_width" value="0.48" />
  <xacro:property name="chassis_height" value="0.28" />

  <xacro:property name="dummy_inertia" value="1e-09"/>

<xacro:property name="cameraSize" value="0.025"/>
<xacro:property name="cameraMass" value="0.05"/>

 <xacro:include filename="$(find vtrex_description)/urdf/vtrex.gazebo" />
 <xacro:include filename="$(find vtrex_description)/urdf/materials.xacro" />
 <!--xacro:include filename="$(find vtrex_description)/urdf/accessories/sick_lms1xx_mount.urdf.xacro"/>
 <xacro:include filename="$(find LMS1xx)/urdf/sick_lms1xx.urdf.xacro" / -->


<xacro:macro name="wheel" params="prefix *joint_pose">

    <link name="${prefix}_wheel_link">
      <visual>
        <origin xyz="-${wheel_radius} ${wheel_width/2} -${wheel_radius}" rpy="${PI/2} 0 0"/>
        <geometry>
       <mesh filename="package://vtrex_description/meshes/wheel.STL"/>
 	</geometry>
        <material name="black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
         <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="3.4"/>
        <inertia
          ixx="0.03" ixy="0" ixz="0"
          iyy="0.05" iyz="0"
          izz="0.03"/>
      </inertial>
    </link>

    <gazebo reference="${prefix}_wheel_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>

    <joint name="${prefix}_wheel" type="continuous">
      <parent link="chassis_link"/>
      <child link="${prefix}_wheel_link" />
      <xacro:insert_block name="joint_pose" />
      <axis xyz="0 1 0" />
    </joint>

    <!-- In reality, VTREX has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
    <transmission name="${prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_wheel">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_actuator">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:wheel prefix="front_left">
    <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="front_right">
    <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="rear_left">
    <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="rear_right">
    <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>

  <link name="base_link"></link>

  <joint name="base_link_joint" type="fixed">

    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="chassis_link" />
  </joint>



  <link name="chassis_link">
    <visual>
      <origin xyz="0 0 ${footprint_vertical_offset}" rpy="0 0 0"/>
      <geometry>
       <mesh filename="package://vtrex_description/meshes/TREX.STL"/>
      </geometry>
<material name="black" />
     </visual>
    <collision>
      <origin xyz="0 0 ${footprint_vertical_offset}" rpy="0 0 0"/>
      <geometry>
       <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <inertial>
      <!-- Center of mass -->
      <origin xyz="0.00  0.00 ${footprint_vertical_offset}" rpy="0 0 0"/>
       <!--<origin xyz="0.012  0.002 0.067" rpy="0 0 0"/>-->
      <mass value="40"/>
      <!-- Moments of inertia: ( chassis without wheels ) -->
      <inertia
        ixx="2" ixy="-0.01" ixz="-0.00"
        iyy="3.68" iyz="-0.0000"
        izz="4.85"/>
      </inertial>
  </link>
    <gazebo reference="chassis_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>
<!--############################################wheelscover#################################################-->


    <link name="left_wheel_cover_link">
      <visual>
        <origin xyz="0 0 ${wheel_cover_z_spacing}" rpy="0 0 0"/>
        <geometry>
       <mesh filename="package://vtrex_description/meshes/wheelscover.STL"/>
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin xyz="0 0 ${wheel_cover_z_spacing}" rpy="0 0 0"/>
        <geometry>
         <mesh filename="package://vtrex_description/meshes/wheelscover.STL"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="1.3"/>
        <inertia
          ixx="0.00" ixy="0" ixz="0"
          iyy="0.01" iyz="0"
          izz="0.01"/>
      </inertial>
    </link>

    <link name="right_wheel_cover_link">
      <visual>
        <origin xyz="0 0 ${wheel_cover_z_spacing}" rpy="0 0 0"/>
        <geometry>
       <mesh filename="package://vtrex_description/meshes/wheelscover.STL"/>
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin xyz="0 0 ${wheel_cover_z_spacing}" rpy="0 0 0"/>
        <geometry>
         <mesh filename="package://vtrex_description/meshes/wheelscover.STL"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="1.3"/>
        <inertia
          ixx="0.00" ixy="0" ixz="0"
          iyy="0.01" iyz="0"
          izz="0.01"/>
      </inertial>
    </link>

    <gazebo reference="left_wheel_cover_link">
      <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="right_wheel_cover_link">
      <material>Gazebo/Red</material>
    </gazebo>

     <joint name="left_wheel_cover" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="chassis_link"/>
      <child link="left_wheel_cover_link" />
    </joint>
    <joint name="right_wheel_cover" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 ${PI}" />
      <parent link="chassis_link"/>
      <child link="right_wheel_cover_link" />
    </joint>
  

<!--############################################wheelscover#################################################-->

  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="chassis_link" />
    <child link="imu_link" />
  </joint>

    <!-- xacro:if value="$(arg laser_enabled)">

      <sick_lms1xx_mount prefix="base" topic="scan"/>

      <joint name="laser_mount_joint" type="fixed">
        <origin xyz="$(optenv vtrex_LMS1XX_XYZ 0.2206 0.0 0.00635)"
                rpy="$(optenv vtrex_LMS1XX_RPY 0.0 0.0 0.0)" />
        <parent link="top_plate_link" />
        <child link="base_laser_mount" />
      </joint>

    </xacro:if -->


</robot>
